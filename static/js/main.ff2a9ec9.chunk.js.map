{"version":3,"sources":["components/Table/index.js","components/Table/Table.js","components/SearchPanel/index.js","components/SearchPanel/SearchPanel.js","components/App/index.js","components/App/App.js","index.js"],"names":["Table","props","data","config","useState","sortConfig","setSortConfig","sortedData","useMemo","sortableData","sort","a","b","field","direction","requestSort","useSortableTable","products","className","scope","onClick","map","item","id","name","price","stock","SearchPanel","onSearch","type","placeholder","onChange","e","text","target","value","App","term","setTerm","searchedData","length","filter","toLowerCase","indexOf","search","onSearchChange","useSearchedData","Fragment","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"sMAEeA,ECiCD,SAAAC,GAAU,IAAD,EAhCE,SAACC,GAAyB,IAAnBC,EAAkB,uDAAT,KAAS,EACZC,mBAASD,GADG,mBACzCE,EADyC,KAC7BC,EAD6B,KA6BhD,MAAO,CAAEC,WA1BUC,mBAAQ,WACzB,IAAMC,EAAY,YAAOP,GAczB,OAZmB,OAAfG,GACFI,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAID,EAAEN,EAAWQ,OAASD,EAAEP,EAAWQ,OACL,cAAzBR,EAAWS,WAA6B,EAAI,EAEjDH,EAAEN,EAAWQ,OAASD,EAAEP,EAAWQ,OACL,cAAzBR,EAAWS,UAA4B,GAAK,EAE9C,KAIJL,IACN,CAACP,EAAMG,IAUWU,YARD,SAAAF,GAClB,IAAIC,EAAY,YACZT,GAAuC,cAAzBA,EAAWS,YAC3BA,EAAY,cAEdR,EAAc,CAAEO,QAAOC,gBAQWE,CADff,EAAbgB,UACAV,EAFa,EAEbA,WAAYQ,EAFC,EAEDA,YACpB,OACE,wBAAOG,UAAU,sCAAjB,UACE,gCACE,qBAAIA,UAAU,gBAAd,UACE,oBAAIC,MAAM,MAAV,SACE,wBACED,UAAU,kBACVE,QAAS,kBAAML,EAAY,OAF7B,kBAOF,oBAAII,MAAM,MAAV,SACE,wBACED,UAAU,kBACVE,QAAS,kBAAML,EAAY,SAF7B,oBAOF,oBAAII,MAAM,MAAV,SACE,wBACED,UAAU,kBACVE,QAAS,kBAAML,EAAY,UAF7B,qBAOF,oBAAII,MAAM,MAAV,SACE,wBACED,UAAU,kBACVE,QAAS,kBAAML,EAAY,UAF7B,6BASN,gCACGR,EAAWc,KAAI,SAAAC,GAAI,OAClB,+BACE,oBAAIH,MAAM,MAAV,SAAiBG,EAAKC,KACtB,6BAAKD,EAAKE,OACV,6BAAKF,EAAKG,QACV,6BAAKH,EAAKI,UAJHJ,EAAKC,aC5ETI,G,MCEK,SAAA1B,GAAU,IACpB2B,EAAa3B,EAAb2B,SAOR,OACE,uBACEV,UAAU,4BACVW,KAAK,OACLC,YAAY,iBACZC,SAVmB,SAAAC,GACrB,IAAMC,EAAOD,EAAEE,OAAOC,MACtBP,EAASK,QCPEG,EC6BH,WAAO,IAAD,EA3BM,WACtB,IAD4B,EAWJhC,mBAAS,IAXL,mBAWrBiC,EAXqB,KAWfC,EAXe,KAwB5B,MAAO,CAAEC,aATM,SAACrC,EAAMmC,GACpB,OAAoB,IAAhBA,EAAKG,OAAqBtC,EACvBA,EAAKuC,QACV,SAAAnB,GAAI,OAAIA,EAAKE,KAAKkB,cAAcC,QAAQN,EAAKK,gBAAkB,KAI9CE,CArBJ,CACf,CAAErB,GAAI,EAAGC,KAAM,SAAUC,MAAO,IAAKC,MAAO,IAC5C,CAAEH,GAAI,EAAGC,KAAM,OAAQC,MAAO,IAAKC,MAAO,IAC1C,CAAEH,GAAI,EAAGC,KAAM,UAAWC,MAAO,IAAKC,MAAO,IAC7C,CAAEH,GAAI,EAAGC,KAAM,cAAeC,MAAO,IAAKC,MAAO,GACjD,CAAEH,GAAI,EAAGC,KAAM,SAAUC,MAAO,GAAKC,MAAO,IAC5C,CAAEH,GAAI,EAAGC,KAAM,aAAcC,MAAO,IAAKC,MAAO,IAChD,CAAEH,GAAI,EAAGC,KAAM,sBAAuBC,MAAO,GAAIC,MAAO,KAcpBW,GAEfQ,eAXA,SAAAR,GAAI,OAAIC,EAAQD,KAeES,GAAjCP,EADQ,EACRA,aAAcM,EADN,EACMA,eACtB,OACE,eAAC,IAAME,SAAP,WACE,cAAC,EAAD,CAAanB,SAAUiB,IACvB,cAAC,EAAD,CAAO5B,SAAUsB,QChCvBS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,Y","file":"static/js/main.ff2a9ec9.chunk.js","sourcesContent":["import Table from './Table';\r\n\r\nexport default Table;\r\n","import React, { useState, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useSortableTable = (data, config = null) => {\r\n  const [sortConfig, setSortConfig] = useState(config);\r\n\r\n  const sortedData = useMemo(() => {\r\n    const sortableData = [...data];\r\n\r\n    if (sortConfig !== null) {\r\n      sortableData.sort((a, b) => {\r\n        if (a[sortConfig.field] < b[sortConfig.field]) {\r\n          return sortConfig.direction === 'ascending' ? -1 : 1;\r\n        }\r\n        if (a[sortConfig.field] > b[sortConfig.field]) {\r\n          return sortConfig.direction === 'ascending' ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    return sortableData;\r\n  }, [data, sortConfig]);\r\n\r\n  const requestSort = field => {\r\n    let direction = 'ascending';\r\n    if (sortConfig && sortConfig.direction === 'ascending') {\r\n      direction = 'descending';\r\n    }\r\n    setSortConfig({ field, direction });\r\n  };\r\n\r\n  return { sortedData, requestSort };\r\n};\r\n\r\nconst Table = props => {\r\n  const { products } = props;\r\n  const { sortedData, requestSort } = useSortableTable(products);\r\n  return (\r\n    <table className=\"table table-bordered border-primary\">\r\n      <thead>\r\n        <tr className=\"table-primary\">\r\n          <th scope=\"col\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => requestSort('id')}\r\n            >\r\n              ID\r\n            </button>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => requestSort('name')}\r\n            >\r\n              Name\r\n            </button>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => requestSort('price')}\r\n            >\r\n              Price\r\n            </button>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => requestSort('stock')}\r\n            >\r\n              In Stock\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {sortedData.map(item => (\r\n          <tr key={item.id}>\r\n            <th scope=\"row\">{item.id}</th>\r\n            <td>{item.name}</td>\r\n            <td>{item.price}</td>\r\n            <td>{item.stock}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTable.propTypes = {\r\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default Table;\r\n","import SearchPanel from './SearchPanel';\r\n\r\nexport default SearchPanel;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SearchPanel.css';\r\n\r\nconst SearchPanel = props => {\r\n  const { onSearch } = props;\r\n\r\n  const onSearchChange = e => {\r\n    const text = e.target.value;\r\n    onSearch(text);\r\n  };\r\n\r\n  return (\r\n    <input\r\n      className=\"form-control search-input\"\r\n      type=\"text\"\r\n      placeholder=\"type to search\"\r\n      onChange={onSearchChange}\r\n    ></input>\r\n  );\r\n};\r\n\r\nSearchPanel.propTypes = {\r\n  onSearch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPanel;\r\n","import App from './App';\r\n\r\nexport default App;\r\n","import React, { useState } from 'react';\r\nimport Table from '../Table';\r\nimport SearchPanel from '../SearchPanel';\r\n\r\nconst useSearchedData = () => {\r\n  const products = [\r\n    { id: 1, name: 'Cheese', price: 4.9, stock: 20 },\r\n    { id: 2, name: 'Milk', price: 1.9, stock: 32 },\r\n    { id: 3, name: 'Yoghurt', price: 2.4, stock: 12 },\r\n    { id: 4, name: 'Heavy Cream', price: 3.9, stock: 9 },\r\n    { id: 5, name: 'Butter', price: 0.9, stock: 99 },\r\n    { id: 6, name: 'Sour Cream', price: 2.9, stock: 86 },\r\n    { id: 7, name: 'Fancy French Cheese', price: 99, stock: 12 },\r\n  ];\r\n\r\n  const [term, setTerm] = useState('');\r\n\r\n  const onSearchChange = term => setTerm(term);\r\n\r\n  const search = (data, term) => {\r\n    if (term.length === 0) return data;\r\n    return data.filter(\r\n      item => item.name.toLowerCase().indexOf(term.toLowerCase()) > -1\r\n    );\r\n  };\r\n\r\n  const searchedData = search(products, term);\r\n\r\n  return { searchedData, onSearchChange };\r\n};\r\n\r\nconst App = () => {\r\n  const { searchedData, onSearchChange } = useSearchedData();\r\n  return (\r\n    <React.Fragment>\r\n      <SearchPanel onSearch={onSearchChange} />\r\n      <Table products={searchedData} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.querySelector('.root')\r\n);\r\n"],"sourceRoot":""}