{"version":3,"sources":["components/Table/index.js","components/Table/Table.js","components/SearchPanel/index.js","components/SearchPanel/SearchPanel.js","components/Pagination/index.js","components/Pagination/Pagination.js","components/App/index.js","components/App/App.js","index.js"],"names":["Table","props","data","config","useState","sortConfig","setSortConfig","sortedData","useMemo","sortableData","sort","a","b","field","direction","requestSort","useSortableTable","products","className","scope","onClick","map","item","id","name","price","stock","SearchPanel","onSearch","type","placeholder","onChange","e","text","target","value","Pagination","onToggle","buttons","items","i","li","href","push","renderPagination","App","term","setTerm","currentPage","setCurrentPage","searchedData","length","filter","toLowerCase","indexOf","searchData","onSearchChange","onTogglePage","useSearchedData","Fragment","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.9b5c7436.chunk.js","sourcesContent":["import Table from './Table';\r\n\r\nexport default Table;\r\n","import React, { useState, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// user hook для инкапсуляции логики сортировки таблицы\r\n// полезно для гибкого переиспользования\r\nconst useSortableTable = (data, config = null) => {\r\n  const [sortConfig, setSortConfig] = useState(config);\r\n\r\n  // кэкшириуем результат сортировки с помощью useMemo()\r\n  // идея в том, чтобы не запускать дорогостоящие вычисления (сортировку) при каждом рендере компонента,\r\n  // если на вход таблицы придут те же данные, т.о. сортировка запустится только при новых данных или state\r\n  const sortedData = useMemo(() => {\r\n    const sortableData = [...data];\r\n\r\n    // сортировка данных\r\n    if (sortConfig !== null) {\r\n      sortableData.sort((a, b) => {\r\n        if (a[sortConfig.field] < b[sortConfig.field]) {\r\n          return sortConfig.direction === 'asc' ? -1 : 1;\r\n        }\r\n        if (a[sortConfig.field] > b[sortConfig.field]) {\r\n          return sortConfig.direction === 'asc' ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    return sortableData;\r\n  }, [data, sortConfig]);\r\n\r\n  // изменяем направление сортировки при клике и обновляем state\r\n  const requestSort = field => {\r\n    let direction = 'asc';\r\n    if (sortConfig && sortConfig.direction === 'asc') {\r\n      direction = 'desc';\r\n    }\r\n    setSortConfig({ field, direction });\r\n  };\r\n\r\n  return { sortedData, requestSort };\r\n};\r\n\r\nconst Table = props => {\r\n  const { products } = props;\r\n  const { sortedData, requestSort } = useSortableTable(products);\r\n\r\n  return (\r\n    <table className=\"table table-bordered border-primary\">\r\n      <thead>\r\n        <tr className=\"table-primary\">\r\n          <th scope=\"col\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => requestSort('id')}\r\n            >\r\n              ID\r\n            </button>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => requestSort('name')}\r\n            >\r\n              Name\r\n            </button>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => requestSort('price')}\r\n            >\r\n              Price\r\n            </button>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => requestSort('stock')}\r\n            >\r\n              In Stock\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {sortedData.map(item => (\r\n          <tr key={item.id}>\r\n            <th scope=\"row\">{item.id}</th>\r\n            <td>{item.name}</td>\r\n            <td>{item.price}</td>\r\n            <td>{item.stock}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTable.propTypes = {\r\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default Table;\r\n","import SearchPanel from './SearchPanel';\r\n\r\nexport default SearchPanel;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SearchPanel.css';\r\n\r\nconst SearchPanel = props => {\r\n  const { onSearch } = props;\r\n\r\n  const onSearchChange = e => {\r\n    const text = e.target.value;\r\n    onSearch(text);\r\n  };\r\n\r\n  return (\r\n    <input\r\n      className=\"form-control search-input\"\r\n      type=\"text\"\r\n      placeholder=\"type to search\"\r\n      onChange={onSearchChange}\r\n    ></input>\r\n  );\r\n};\r\n\r\nSearchPanel.propTypes = {\r\n  onSearch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPanel;\r\n","import Pagination from './Pagination';\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Pagination = props => {\r\n  const { onToggle } = props;\r\n  const _numberOfPages = 3;\r\n\r\n  const onTogglePage = id => onToggle(id);\r\n\r\n  const renderPagination = () => {\r\n    const items = [];\r\n    for (let i = 1; i <= _numberOfPages; i++) {\r\n      const li = (\r\n        <li key={i} className=\"page-item\" onClick={() => onTogglePage(i)}>\r\n          <a className=\"page-link\" href=\"#\">\r\n            {i}\r\n          </a>\r\n        </li>\r\n      );\r\n      items.push(li);\r\n    }\r\n    return items;\r\n  };\r\n\r\n  const buttons = renderPagination();\r\n\r\n  return <ul className=\"pagination pagination-lg\">{buttons}</ul>;\r\n};\r\n\r\nPagination.propTypes = {\r\n  onToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import App from './App';\r\n\r\nexport default App;\r\n","import React, { useState } from 'react';\r\nimport Table from '../Table';\r\nimport SearchPanel from '../SearchPanel';\r\nimport Pagination from '../Pagination';\r\n\r\nconst useSearchedData = () => {\r\n  // initial data\r\n  const products = [\r\n    { id: 1, name: 'Cheese', price: 4.9, stock: 20 },\r\n    { id: 2, name: 'Milk', price: 1.9, stock: 32 },\r\n    { id: 3, name: 'Yoghurt', price: 2.4, stock: 12 },\r\n    { id: 4, name: 'Heavy Cream', price: 3.9, stock: 9 },\r\n    { id: 5, name: 'Butter', price: 0.9, stock: 99 },\r\n    { id: 6, name: 'Sour Cream', price: 2.9, stock: 86 },\r\n    { id: 7, name: 'Fancy French Cheese', price: 99, stock: 12 },\r\n    { id: 8, name: 'Banana', price: 16, stock: 5 },\r\n    { id: 9, name: 'Coffee', price: 18, stock: 43 },\r\n  ];\r\n\r\n  // state\r\n  const [term, setTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  // обновление state\r\n  const onSearchChange = term => setTerm(term);\r\n  const onTogglePage = id => setCurrentPage(id);\r\n\r\n  // переключение страниц\r\n  const togglePage = (data, id) =>\r\n    data.filter(item => item.id <= id * 3 && item.id > (id - 1) * 3);\r\n\r\n  // поиск данных в таблице\r\n  const searchData = (data, term) => {\r\n    if (term.length === 0) return data;\r\n    return data.filter(\r\n      item => item.name.toLowerCase().indexOf(term.toLowerCase()) > -1\r\n    );\r\n  };\r\n\r\n  // данные на странице\r\n  const dataOnPage = togglePage(products, currentPage);\r\n\r\n  // найденные данные на странице\r\n  const searchedData = searchData(dataOnPage, term);\r\n\r\n  return { searchedData, onSearchChange, onTogglePage };\r\n};\r\n\r\nconst App = () => {\r\n  const { searchedData, onSearchChange, onTogglePage } = useSearchedData();\r\n  return (\r\n    <React.Fragment>\r\n      <SearchPanel onSearch={onSearchChange} />\r\n      <Table products={searchedData} />\r\n      <Pagination onToggle={onTogglePage} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.querySelector('.root')\r\n);\r\n"],"sourceRoot":""}